require 'segmentation'
include Segmentation::Paths

data_set = ARGV[0]
carp_basename = File.join results_dir(data_set), 'mesh'

pts_filename       = "#{carp_basename}.pts"
elem_filename      = "#{carp_basename}.elem"
centroids_filename = "#{carp_basename}.centroids"

# read points
print "Extracting points..."
points = File.readlines(pts_filename)[1..-1].map do |line|
  line.split.map &:to_f
end
puts "done"

# read elements
print "Extracting elements..."
elements = File.readlines(elem_filename)[1..-1].map do |line|
  line.split[1..4].map &:to_i
end
puts "done"

# calculate centroids
print "Calculating centroids..."
centroids = elements.map do |element|
  centroid = element.inject([0,0,0]) do |memo, point_index|
    memo.each_index do |i|
      memo[i] += points[point_index][i] / 4
    end
  end
end
puts "done"

# write element centroids to file
print "Writing centroids..."
File.open(centroids_filename, "w") do |centroids_file|
  centroids_file.puts centroids.length
  centroids.each do |centroid|
    centroids_file.puts centroid.join " "
  end
end
puts "done"